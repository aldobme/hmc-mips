#summary Explains the procedure for setting up the software build environment for the HMC MIPS processor.
#labels Phase-Deploy

= Introduction =

This document is designed to take you through the steps of setting up Cygwin, yoda_warrior, and downloading source for the HMC MIPS such that you can develop your own C files and write them to coefficient files.

You will need:
  * The yoda_warrior.tar.gz tar file
  * An internet connection

= Setup procedures =

There are three steps to the setup:
 # Get a working copy of Cygwin
 # Get yoda_warrior running
 # Download the hmc-mips systems source files (You need the /systems/src folder specifically just for compiling.)

== Cygwin Setup ==

 # Download cygwin from this site:  http://www.cygwin.com/
 # Run setup.exe
 # click next twice
 # Set to install to a directory on your main drive (e.g. `C:\cygwin`), and click next
 # Set where download files will be placed, and click next twice
 # Select an ftp mirror near you geographically.  I usually use ftp://mirrors.xmission.com
 # Select the packages you want to install.  Please include the following packages (by clicking where it says "skip" next to each entry):
  * Everything in Base
  * Devel: automake, binutils, bison, gcc-core, make, subversion
  * Editors: Choose your favorite editor (e.g. vim or emacs)
  * Interpreters: python
  * Shells: make sure bash (or your favorite shell) will install
 # Click next to start installation.
 # Click finish


== Yoda_warrior Setup ==

After Cygwin has been installed, run the command prompt for Cygwin (bash shell).  Copy the tar file for yoda_warrior into your home directory.  Make a directory called `yoda_warrior` and enter it, then untar yoda_warrior from your home directory into the newly created directory using the command

{{{
tar xvf ../yoda_warrior.tar.gz
}}}

Wait a long time for it to finish.


== MIPS Processor toolchain setup ==

Now from your home directory run
	
{{{
svn checkout http://hmc-mips.googlecode.com/svn/trunk/ hmc-mips
}}}

to get all of the source from the mips project.  Then go to the 'hmc-mips/systems/src' folder.  From here, you can write your programs.  If your program is called "`myfile.c`", then you should be able to execute

{{{
make myfile.coe
}}}

which will compile your program, check it for invalid instructions, and dump a coefficient file (along with the bootloader) for simulation in verilog into the folder.
#summary Verilog Development Worklog

=Instruction Log=

[http://docs.google.com/View?docid=df39snmn_12g57j46 Click here] to see the current status of the various instructions.

=Carl's Log for developing the hmc mips processor=

==1/2/2007==

I spent today adding support for all the jump and branch commands, as well as the branch delay slot.  I believe that supporting the branch delay slot is as simple as removing the clear feature of the register between the Fetch and Decode stages.

The hard part was supporting all the different kinds of branches.  There are 2 R-type commands with jumps, opcode 1 has four branches, as well as six other instructions with their own opcodes.  I also have to support linking, which means I have to add to the main datapath.

==1/1/2007==

I believe I misinterpretted the sltiu command.  I originally added an enable slot to the immediate sign extender so that the immediate can be turned off for these unsigned instructions.  I can't find any reference to this issue in See MIPS Run, but [http://www.mrc.uidaho.edu/mrc/people/jff/digital/MIPSir.html this website] says that all immediate values are first sign extended and then treated as signed or unsigned.  I believe only a certain set of intrsuctions have their immediates sign extended.  Page 223 of See MIPS Run for example shows "signed" and "unsigned."  PCSPIM seems to behave in a way consistent with those instructions being zero-extended.

==12/31/2006==

I implemented some of the immediate instructions.  I am becoming better at debugging, so my speed of development should start to pick up more and more.

==12/30/2006==

Now that I'm starting to get into the nitty-gritty of implementation, I'm going to try to document my work.

I am starting off with basics, in particular the immediate instructions.  I just read in See MIPS Run (page 178) that I misinterpreted the meaning of the "u" in some instructions like addu and subu.  I assumed it meant "unsigned," but in fact some of the time it means something like "no overflow test."  See MIPS Run says it is very unliked that the non-suffixed versions (e.g. "add") will ever be generated by a compiler.  Therefore I plan to remove these instructions from the instruction set (or just make them replicas of "addu" etc).  
#summary Detailed specifications for the MIPS memory system

= Introduction =

This specifies the memory subsystem, including the data and instruction cache.


= Overview =

Two 4kB caches, one for data and one for instructions.  

  * Create (identical) direct-mapped write-back instruction and data caches
  * Support cache bypassing (via upper bits of memory address)
  * Support cache swapping (using the swc bit available in the status register)
  * Support cache isolation (using the isc bit available in the status register) 

= Cache Specifications =

Each cache will be 4kB in size.  The cache will be of the following type:

  * _Write-through_: When data is written to an address, it is written immediately to memory as well as the cached.  The cache never has an newer copy of data than main memory.
  * _Write buffer_: To improve performance, so the CPU does not stall for the entire memory write latency, a FIFO (first-in first-out) write buffer is used.  Once the write buffer is full, the CPU must stall.
  * _Direct-mapped_: The lower bits (how many bits?) of the memory address will be used as the tag in the cache memory.
  * _Physically addressed_: The memory address the cache uses is based upon the physical address, the actual address in RAM, not a program address which is translated.

= Cache Interface =

= Memory Maps =

Program Memory:

  * kseg0 (cached program memory):  0x8000 0000 - 0x9FFF FFFF 
  * kseg1 (uncached program memory):  0x0000 0000 - 0xBFFF FFFF

Data Memory:

For simplicity, data memory and shared with program memory, with the same mappings as above.  No mechanism is in place to protect program memory from accidental overwriting.

= Startup Procedures =

Since the cache will be full of garbage when the CPU starts, the cache must be initialized before use.

The start address of programs, as given by default with PCSpim, is 0x0x0040 0000